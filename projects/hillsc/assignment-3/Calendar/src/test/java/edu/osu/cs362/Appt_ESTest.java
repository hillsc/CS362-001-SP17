/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 01:34:00 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.osu.cs362.Appt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Appt_ESTest extends Appt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, 11, (String) null, (String) null);
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t11/11/11 at 11:11am ,, \n", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "fkv~{WibW)g(e_++T", "oqK\"(CX1c:");
      appt0.setStartMinute(59);
      assertEquals(59, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Appt appt0 = new Appt(0, (-2271), (-2271), 0, (-2271), "", "");
      boolean boolean0 = appt0.getValid();
      assertEquals(-2271, appt0.getStartMinute());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(-2271, appt0.getStartYear());
      assertEquals(-2271, appt0.getStartDay());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Appt appt0 = new Appt(1993, 1993, 1993, 1993, 1993, "TooLarge", "Timezone");
      String string0 = appt0.getTitle();
      assertEquals(1993, appt0.getStartYear());
      assertEquals(1993, appt0.getStartHour());
      assertEquals(1993, appt0.getStartMonth());
      assertEquals("Timezone", appt0.getDescription());
      assertEquals("TooLarge", string0);
      assertEquals(1993, appt0.getStartDay());
      assertEquals(1993, appt0.getStartMinute());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "UO]dSi:'oE(", "UO]dSi:'oE(");
      int int0 = appt0.getStartYear();
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartMinute());
      assertEquals("UO]dSi:'oE(", appt0.getTitle());
      assertEquals(0, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals("UO]dSi:'oE(", appt0.getDescription());
      assertEquals(0, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Appt appt0 = new Appt(631, 631, 631, 2313, 2313, "kK&`Nii$", "kK&`Nii$");
      int int0 = appt0.getStartYear();
      assertEquals("kK&`Nii$", appt0.getTitle());
      assertEquals(631, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(2313, int0);
      assertEquals(631, appt0.getStartMinute());
      assertEquals(631, appt0.getStartHour());
      assertEquals("kK&`Nii$", appt0.getDescription());
      assertEquals(2313, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "Gvu>>P,", "Gvu>>P,");
      int int0 = appt0.getStartMonth();
      assertEquals(0, appt0.getStartYear());
      assertEquals("Gvu>>P,", appt0.getTitle());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartMinute());
      assertEquals("Gvu>>P,", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Appt appt0 = new Appt(375, 375, 375, 375, 375, (String) null, "");
      int int0 = appt0.getStartMonth();
      assertEquals(375, appt0.getStartDay());
      assertEquals(375, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(375, appt0.getStartHour());
      assertEquals(375, appt0.getStartYear());
      assertEquals(375, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Appt appt0 = new Appt(100, 100, 0, 0, 0, "", "");
      int int0 = appt0.getStartMinute();
      assertEquals(0, appt0.getStartMonth());
      assertEquals(100, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartDay());
      assertEquals(100, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Appt appt0 = new Appt(23, (-3843), (-3361), (-3361), (-1586), "ZkT6/K8", "ZkT6/K8");
      int int0 = appt0.getStartMinute();
      assertEquals((-3843), int0);
      assertEquals(23, appt0.getStartHour());
      assertEquals("ZkT6/K8", appt0.getDescription());
      assertEquals(-3361, appt0.getStartDay());
      assertEquals("ZkT6/K8", appt0.getTitle());
      assertEquals(-3361, appt0.getStartMonth());
      assertEquals(-1586, appt0.getStartYear());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Appt appt0 = new Appt(0, 816, 0, 816, 0, "3L V=", "3L V=");
      int int0 = appt0.getStartDay();
      assertEquals(816, appt0.getStartMinute());
      assertEquals("3L V=", appt0.getDescription());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, int0);
      assertEquals(816, appt0.getStartMonth());
      assertEquals("3L V=", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Appt appt0 = new Appt(0, 816, 0, 816, 0, "3L V=", "3L V=");
      String string0 = appt0.getDescription();
      assertEquals(0, appt0.getStartHour());
      assertEquals("3L V=", string0);
      assertEquals(816, appt0.getStartMonth());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals("3L V=", appt0.getTitle());
      assertEquals(816, appt0.getStartMinute());
      assertEquals(0, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Appt appt0 = new Appt(0, (-2271), (-2271), 0, (-2271), "", "");
      appt0.setDescription("");
      assertEquals(0, appt0.getStartHour());
      assertEquals(-2271, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(-2271, appt0.getStartMinute());
      assertEquals(-2271, appt0.getStartDay());
      assertEquals(0, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "Gvu>>P,", "Gvu>>P,");
      assertEquals("Gvu>>P,", appt0.getDescription());
      
      appt0.setDescription((String) null);
      assertEquals(0, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 59, 59, "os5Mz=^Z 11l|", "os5Mz=^Z 11l|");
      appt0.setTitle("os5Mz=^Z 11l|");
      assertEquals(59, appt0.getStartYear());
      assertEquals(0, appt0.getStartHour());
      assertEquals(59, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMinute());
      assertEquals("os5Mz=^Z 11l|", appt0.getTitle());
      assertEquals(0, appt0.getStartDay());
      assertEquals("os5Mz=^Z 11l|", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Appt appt0 = new Appt(0, 816, 0, 816, 0, "3L V=", "3L V=");
      assertEquals("3L V=", appt0.getTitle());
      
      appt0.setTitle((String) null);
      assertEquals(0, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, (-988), "`,HQs5^jT-rl%3&", "`,HQs5^jT-rl%3&");
      int int0 = appt0.getStartHour();
      assertEquals("`,HQs5^jT-rl%3&", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartDay());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, int0);
      assertEquals(-988, appt0.getStartYear());
      assertEquals(0, appt0.getStartMonth());
      assertEquals("`,HQs5^jT-rl%3&", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Appt appt0 = new Appt((-210), (-210), (-210), (-210), 1, (String) null, (String) null);
      String string0 = appt0.getTitle();
      assertEquals(-210, appt0.getStartHour());
      assertEquals(-210, appt0.getStartDay());
      assertEquals(-210, appt0.getStartMinute());
      assertNotNull(string0);
      assertFalse(appt0.getValid());
      assertEquals(1, appt0.getStartYear());
      assertEquals(-210, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Appt appt0 = new Appt((-210), (-210), (-210), (-210), 1, (String) null, (String) null);
      int int0 = appt0.getStartDay();
      assertEquals(-210, appt0.getStartMonth());
      assertEquals((-210), int0);
      assertEquals(1, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(-210, appt0.getStartHour());
      assertEquals(-210, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Appt appt0 = new Appt((-1350), 921, (-1310), (-1350), (-1310), "B@:n4#JTy~ym3MW", "");
      int int0 = appt0.getStartHour();
      assertEquals((-1350), int0);
      assertEquals(921, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(-1310, appt0.getStartYear());
      assertEquals(-1350, appt0.getStartMonth());
      assertEquals("B@:n4#JTy~ym3MW", appt0.getTitle());
      assertEquals(-1310, appt0.getStartDay());
      assertEquals("", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Appt appt0 = new Appt((-157), (-157), (-157), (-157), (-356), "", "");
      appt0.getDescription();
      assertEquals(-356, appt0.getStartYear());
      assertEquals(-157, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(-157, appt0.getStartMonth());
      assertEquals(-157, appt0.getStartMinute());
      assertEquals(-157, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Appt appt0 = new Appt(1096, 1096, 2319, (-2358), 0, "", ">FXl1");
      int int0 = appt0.getStartMonth();
      assertEquals((-2358), int0);
      assertEquals(">FXl1", appt0.getDescription());
      assertEquals("", appt0.getTitle());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(1096, appt0.getStartHour());
      assertEquals(1096, appt0.getStartMinute());
      assertEquals(2319, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 1, 1, "", "");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t1/1/1 at 1:1am ,, \n", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Appt appt0 = new Appt((-210), (-210), (-210), (-210), 1, (String) null, (String) null);
      String string0 = appt0.toString();
      assertEquals(-210, appt0.getStartDay());
      assertEquals(1, appt0.getStartYear());
      assertEquals(-210, appt0.getStartMonth());
      assertEquals(-210, appt0.getStartHour());
      assertNull(string0);
      assertEquals(-210, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, 11, (String) null, (String) null);
      appt0.setStartMonth((-49));
      assertEquals(-49, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Appt appt0 = new Appt(7, 7, 2923, 7, 7, "^$k|C[aL3", "^$k|C[aL3");
      assertEquals(7, appt0.getStartMonth());
      assertEquals(7, appt0.getStartMinute());
      assertEquals(7, appt0.getStartYear());
      assertEquals("^$k|C[aL3", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals(7, appt0.getStartHour());
      assertEquals("^$k|C[aL3", appt0.getDescription());
      assertEquals(2923, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Appt appt0 = new Appt(0, 1211, 1211, 0, 0, "", "w@^*");
      int int0 = appt0.getStartDay();
      assertEquals(1211, appt0.getStartMinute());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
      assertEquals("w@^*", appt0.getDescription());
      assertEquals(0, appt0.getStartMonth());
      assertEquals("", appt0.getTitle());
      assertEquals(1211, int0);
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Appt appt0 = new Appt(0, (-2271), (-2271), 0, (-2271), "", "");
      int int0 = appt0.getStartYear();
      assertEquals((-2271), int0);
      assertFalse(appt0.getValid());
      assertEquals(-2271, appt0.getStartMinute());
      assertEquals(0, appt0.getStartHour());
      assertEquals(-2271, appt0.getStartDay());
      assertEquals(0, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Appt appt0 = new Appt(1017, 0, 0, 1017, 0, "org.apache.xerces.jaxp.datatype.DurationImpl", "");
      int int0 = appt0.getStartHour();
      assertEquals("", appt0.getDescription());
      assertEquals(0, appt0.getStartYear());
      assertEquals("org.apache.xerces.jaxp.datatype.DurationImpl", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(1017, int0);
      assertEquals(1017, appt0.getStartMonth());
      assertEquals(0, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 31, 31, 0, "", "");
      appt0.setStartHour((-2693));
      assertEquals(-2693, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, 12, 12, "", "");
      appt0.setStartMinute(12);
      assertEquals(12, appt0.getStartMinute());
      assertEquals(12, appt0.getStartMonth());
      assertTrue(appt0.getValid());
      assertEquals(12, appt0.getStartYear());
      assertEquals(12, appt0.getStartDay());
      assertEquals(12, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, 12, 12, "", "");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t12/12/12 at 12:12pm ,, \n", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 31, 31, 0, "", "");
      appt0.setStartYear(0);
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(31, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartHour());
      assertEquals(31, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 31, 31, 0, "", "");
      appt0.setStartDay((-2652));
      assertEquals(-2652, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, 12, 12, "", "");
      boolean boolean0 = appt0.getValid();
      assertEquals(12, appt0.getStartDay());
      assertTrue(boolean0);
      assertEquals(12, appt0.getStartMonth());
      assertEquals(12, appt0.getStartYear());
      assertEquals(12, appt0.getStartHour());
      assertEquals(12, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 31, 31, 0, "", "");
      int int0 = appt0.getStartMinute();
      assertFalse(appt0.getValid());
      assertEquals(31, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, int0);
      assertEquals(31, appt0.getStartDay());
  }
}
